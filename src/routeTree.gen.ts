/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as NewsPostIdImport } from './routes/news/$postId'

// Create Virtual Routes

const TosLazyImport = createFileRoute('/tos')()
const PricingLazyImport = createFileRoute('/pricing')()
const MissionLazyImport = createFileRoute('/mission')()
const BrandLazyImport = createFileRoute('/brand')()
const IndexLazyImport = createFileRoute('/')()
const NewsIndexLazyImport = createFileRoute('/news/')()

// Create/Update Routes

const TosLazyRoute = TosLazyImport.update({
  path: '/tos',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/tos.lazy').then((d) => d.Route))

const PricingLazyRoute = PricingLazyImport.update({
  path: '/pricing',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/pricing.lazy').then((d) => d.Route))

const MissionLazyRoute = MissionLazyImport.update({
  path: '/mission',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/mission.lazy').then((d) => d.Route))

const BrandLazyRoute = BrandLazyImport.update({
  path: '/brand',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/brand.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const NewsIndexLazyRoute = NewsIndexLazyImport.update({
  path: '/news/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/news/index.lazy').then((d) => d.Route))

const NewsPostIdRoute = NewsPostIdImport.update({
  path: '/news/$postId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/brand': {
      id: '/brand'
      path: '/brand'
      fullPath: '/brand'
      preLoaderRoute: typeof BrandLazyImport
      parentRoute: typeof rootRoute
    }
    '/mission': {
      id: '/mission'
      path: '/mission'
      fullPath: '/mission'
      preLoaderRoute: typeof MissionLazyImport
      parentRoute: typeof rootRoute
    }
    '/pricing': {
      id: '/pricing'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof PricingLazyImport
      parentRoute: typeof rootRoute
    }
    '/tos': {
      id: '/tos'
      path: '/tos'
      fullPath: '/tos'
      preLoaderRoute: typeof TosLazyImport
      parentRoute: typeof rootRoute
    }
    '/news/$postId': {
      id: '/news/$postId'
      path: '/news/$postId'
      fullPath: '/news/$postId'
      preLoaderRoute: typeof NewsPostIdImport
      parentRoute: typeof rootRoute
    }
    '/news/': {
      id: '/news/'
      path: '/news'
      fullPath: '/news'
      preLoaderRoute: typeof NewsIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  BrandLazyRoute,
  MissionLazyRoute,
  PricingLazyRoute,
  TosLazyRoute,
  NewsPostIdRoute,
  NewsIndexLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/brand",
        "/mission",
        "/pricing",
        "/tos",
        "/news/$postId",
        "/news/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/brand": {
      "filePath": "brand.lazy.tsx"
    },
    "/mission": {
      "filePath": "mission.lazy.tsx"
    },
    "/pricing": {
      "filePath": "pricing.lazy.tsx"
    },
    "/tos": {
      "filePath": "tos.lazy.tsx"
    },
    "/news/$postId": {
      "filePath": "news/$postId.tsx"
    },
    "/news/": {
      "filePath": "news/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
